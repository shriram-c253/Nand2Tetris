// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address[9..11],a=t0,b=t1,c=t2,d=t3,e=t4,f=t5,g=t6,h=t7);
	RAM512(in=in,load=t0,address=address[0..8],out=o0);
	RAM512(in=in,load=t1,address=address[0..8],out=o1);
	RAM512(in=in,load=t2,address=address[0..8],out=o2);
	RAM512(in=in,load=t3,address=address[0..8],out=o3);
	RAM512(in=in,load=t4,address=address[0..8],out=o4);
	RAM512(in=in,load=t5,address=address[0..8],out=o5);
	RAM512(in=in,load=t6,address=address[0..8],out=o6);
	RAM512(in=in,load=t7,address=address[0..8],out=o7);
	Mux8Way16(a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,sel=address[9..11],out=out);

}